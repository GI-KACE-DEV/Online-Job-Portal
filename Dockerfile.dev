FROM php:8.2-fpm

# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Copy composer.lock and composer.json
#COPY composer.lock composer.json /var/www/

COPY ./db/online_job_db.sql /docker-compose/mysql/init/docker-entrypoint-initdb.d/online_job_db.sql

# Set working directory
WORKDIR /var/www

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    libzip-dev \
    -y mariadb-client


    # Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy the application code into the container
COPY . /var/www

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install zip mysqli pdo_mysql mbstring exif pcntl bcmath gd && docker-php-ext-enable mysqli

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user


    # Install PHP dependencies
#RUN composer update

# Install PHP dependencies
# RUN composer install --no-dev --optimize-autoloader

# # Generate the optimized autoload files
# RUN composer dump-autoload --optimize


# Install Node.js and npm (if not already included in the base image)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install Node.js dependencies
RUN npm install


# Copy the custom entrypoint script
COPY entrypoint.sh /usr/bin/entrypoint.sh

# Set the entrypoint script as executable
RUN chmod +x /usr/bin/entrypoint.sh

# Set the custom entrypoint
ENTRYPOINT ["/usr/bin/entrypoint.sh"]

# Set working directory
#WORKDIR /var/www

USER $user
